{"version":3,"file":"static/js/326.f316f160.chunk.js","mappings":"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","sources":["components/checkbox/Radio.js","components/dropdown/dropdown-context.js","components/dropdown/Dropdown.js","components/dropdown/Option.js","components/dropdown/Search.js","components/dropdown/Select.js","components/dropdown/List.js","components/dropdown/index.js","components/field/Field.js","components/field/FieldCheckboxes.js","components/image/ImageUpLoad.js","components/input/Input.js","components/label/Label.js","components/label/LabelStatus.js","components/toggle/Toggle.js","hooks/useFirebaseImage.js","module/dashboard/DashboardHeading.js"],"sourcesContent":["import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst Radio = ({ checked, children, control, name, ...rest }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <label>\r\n      <input\r\n        checked={checked}\r\n        type=\"radio\"\r\n        className=\"hidden-input\"\r\n        {...field}\r\n        {...rest}\r\n      />\r\n      <div className=\"flex items-center gap-x-3 font-medium cursor-pointer\">\r\n        <div\r\n            className={`w-7 h-7 rounded-full border flex items-center justify-center p-1  ${\r\n            checked\r\n              ? \"bg-primary border-primary text-white\"\r\n              : \"border-gray-200 text-transparent\"\r\n          }`}\r\n          >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 13l4 4L19 7\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <span>{children}</span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Radio;","import { createContext, useContext, useState } from \"react\";\r\n\r\n\r\n\r\n\r\nconst DropdownContext = createContext();\r\n\r\nfunction DropdownProvider(props) {\r\n  const [show, setShow] = useState(false);\r\n  const toggle = () => {\r\n    setShow(!show);\r\n  };\r\n\r\n  const values ={show, setShow, toggle};\r\n  return (\r\n\r\n    <DropdownContext.Provider value={values}>\r\n\r\n      {props.children}\r\n\r\n    </DropdownContext.Provider>\r\n\r\n  );\r\n\r\n}\r\n\r\nfunction useDropdown() {\r\n\r\n  const context = useContext(DropdownContext);\r\n\r\n  if (typeof context === \"undefined\")\r\n\r\n    throw new Error(\"useDropdown must be used within DropdownProvider\");\r\n\r\n  return context;\r\n\r\n}\r\n\r\nexport { useDropdown, DropdownProvider };","import React from \"react\";\r\nimport { DropdownProvider } from \"./dropdown-context\";\r\n\r\nconst Dropdown = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n\r\n  return (\r\n    <DropdownProvider {...props}>\r\n      <div className=\"relative inline-block w-full\">\r\n      \r\n        {children}\r\n      </div>\r\n    </DropdownProvider>\r\n  );\r\n};\r\n\r\nexport default Dropdown;","import React from \"react\";\r\nimport { useDropdown } from \"./dropdown-context\";\r\n\r\nconst Option = (props) => {\r\n  const { setShow } = useDropdown();\r\n  const { onClick } = props;\r\n  const handleClick = () => {\r\n    onClick && onClick();\r\n    setShow(false);\r\n  }\r\n  return (\r\n    <div\r\n      className=\"py-[15px] px-[25px] cursor-pointer flex items-center justify-between hover:text-primary transition-all\"\r\n      onClick={handleClick}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Option;","import React from \"react\";\r\nimport { useDropdown } from \"./dropdown-context\";\r\n\r\nconst Search = ({ placeholder, ...props }) => {\r\n  const { onChange } = useDropdown();\r\n  return (\r\n    <div className=\"p-2\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        className=\"p-4 outline-none w-full border border-gray-200 rounded\"\r\n        onChange={onChange}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;","import React from 'react';\r\nimport { useDropdown } from './dropdown-context';\r\n\r\nconst Select = ({ placeholder = '', className = \"\" }) => {\r\n    const { toggle, show } = useDropdown();\r\n    return (\r\n        <div\r\n            className={`flex items-center justify-between py-[15px] px-[25px] bg-white border border-grayf1 rounded-lg cursor-pointer font-medium ${className}`}\r\n            onClick={toggle}\r\n        >\r\n            <span>{placeholder}</span>\r\n            <span>\r\n                {show ? (\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-6 w-6\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            d=\"M5 15l7-7 7 7\"\r\n                        />\r\n                    </svg>\r\n                ) : (\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        className=\"h-6 w-6\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                    >\r\n                        <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            d=\"M19 9l-7 7-7-7\"\r\n                        />\r\n                    </svg>\r\n                )}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import React from 'react';\r\nimport { useDropdown } from './dropdown-context';\r\n\r\nconst List = ({ children }) => {\r\n    const { show } = useDropdown();\r\n    return (\r\n        <>\r\n            {show && (\r\n                <div className=\"absolute top-full left-0 w-full bg-white shadow-sm\">\r\n                    {children}\r\n                </div>\r\n            )}\r\n\r\n        </>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default List;","import Dropdown from \"./Dropdown\";\r\nimport Option from \"./Option\";\r\nimport Search from \"./Search\";\r\nimport Select from \"./Select\";\r\nimport List from \"./List\";\r\n\r\nDropdown.Option = Option;\r\nDropdown.Search = Search;\r\nDropdown.Select = Select;\r\nDropdown.List = List;\r\n\r\nexport { Dropdown };","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst FieldStyles = styled.div`\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    row-gap: 10px;\r\n    margin-bottom: 25px;\r\n`\r\n\r\nconst Field = ({children}) =>{\r\n    return <FieldStyles>\r\n        {children}\r\n    </FieldStyles>\r\n}\r\n\r\nexport default Field; ","import React from \"react\";\r\n\r\nconst FieldCheckboxes = ({ children }) => {\r\n  return <div className=\"flex flex-wrap gap-5\">{children}</div>;\r\n};\r\n\r\nexport default FieldCheckboxes;","import React, { Fragment } from \"react\";\r\nimport PropTypes from 'prop-types'\r\nconst ImageUpload = (props) => {\r\n  const {\r\n    name,\r\n    className = \"\",\r\n    progress = 0,\r\n    image = \"\",\r\n    handleDeleteImage = () => { },\r\n    ...rest\r\n  } = props;\r\n  return (\r\n    <label\r\n      className={`cursor-pointer flex items-center justify-center border border-dashed w-full min-h-[200px] rounded-lg ${className} relative overflow-hidden group`}\r\n    >\r\n      <input\r\n        type=\"file\"\r\n        name={name}\r\n        className=\"hidden-input\"\r\n        onChange={() => { }}\r\n        {...rest}\r\n      />\r\n      {progress !== 0 && !image && (\r\n        <div className=\"loading w-16 h-16 border-8 border-green-500 border-t-transparent animate-spin absolute z-10 rounded-full\"></div>\r\n      )}\r\n      {!image && progress === 0 && (\r\n        <div className=\"flex flex-col items-center text-center pointer-events-none\">\r\n          <img\r\n            src=\"/img-upload.png\"\r\n            alt=\"upload-img\"\r\n            className=\"max-w-[80px] mb-5\"\r\n          />\r\n          <p className=\"font-semibold\">Choose photo</p>\r\n        </div>\r\n      )}\r\n      \r\n      {image && (\r\n        <Fragment>\r\n          <img src={image} className=\"w-full h-full object-cover\" alt=\"\" />\r\n          <button\r\n            type=\"button\"\r\n            className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center cursor-pointer absolute z-10 text-red-500 opacity-0 invisible transition-all group-hover:opacity-100 group-hover:visible\"\r\n            onClick={handleDeleteImage}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\r\n            </svg>\r\n\r\n          </button>\r\n        </Fragment>\r\n      )}\r\n\r\n\r\n      {!image && (\r\n        <div\r\n          className=\"absolute w-10 h-1 bg-green-400 bottom-0 left-0 transition-all image-upload-progress\"\r\n          style={{\r\n            width: `${Math.ceil(progress)}%`,\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n\r\n    </label>\r\n  );\r\n};\r\n\r\nImageUpload.propTypes = {\r\n  name: PropTypes.string,\r\n  className: PropTypes.string,\r\n  progress: PropTypes.number,\r\n  image: PropTypes.string,\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useController } from 'react-hook-form';\r\nimport PropTypes from 'prop-types'\r\n//Do có thêm icon nên dùng ,div thay vì .input\r\nconst InputStyles = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    input{\r\n        width:100%;\r\n        padding: ${(props) =>\r\n        props.hasIcon ? \"15px 60px 15px 25px\" : \"15px 25px\"};\r\n        background-color: transparent;\r\n        border: 1px solid ${(props) => props.theme.grayf1};\r\n        border-radius: 8px;\r\n        font-weight:500 ;\r\n        transition:all 0.2s linear ;\r\n        color: ${(props) => props.theme.black};\r\n        font-size: 14px;\r\n    }\r\n    input::-webkit-input-placeholder{\r\n        color:#84878b;\r\n\r\n    }\r\n    input::-moz-input-placeholder{\r\n        color:#84878b;\r\n    }\r\n    .input-icon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n/**\r\n *\r\n * @param {*} placeholder(optional) - Placeholder of input\r\n * @param {*} name(optional) - name of input\r\n * @param {*} control - control from react hook form\r\n * @returns Input\r\n */\r\n\r\nconst Input = ({\r\n    name = '',\r\n    type = 'text',\r\n    children,\r\n    control,\r\n    ...props\r\n}) => {\r\n\r\n    const { field } = useController({\r\n        control,\r\n        name,\r\n        defaultValue: '',\r\n    });\r\n\r\n    return (\r\n        //Nếu có\r\n        <InputStyles hasIcon={children ? true : false}>\r\n            <input id={name} type={type} {...field} {...props} />\r\n            {children ? <div className='input-icon'>{children}</div> : null}\r\n        </InputStyles>\r\n    );\r\n\r\n};\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n    children: PropTypes.any,\r\n    control: PropTypes.any.isRequired,\r\n}\r\n\r\nexport default Input;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LabelStyles = styled.label`\r\n  color: ${(props) => props.theme.gray4b};\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n`;\r\n//children nội dung, props những sự kiện onClick,..\r\nconst Label = ({ htmlFor = \"\", children, ...props }) => {\r\n  return (\r\n    <LabelStyles htmlFor={htmlFor} {...props}>\r\n      {children}\r\n    </LabelStyles>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStatusStyles = styled.span`\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n/**\r\n *\r\n * @param type - \"default\" \"success\" \"warning\" \"danger\"\r\n * @returns\r\n */\r\nconst LabelStatus = ({ children, type = \"default\" }) => {\r\n  let styleClassName = \"text-gray-500 bg-gray-100\";\r\n  switch (type) {\r\n    case \"success\":\r\n      styleClassName = \"text-green-500 bg-green-100\";\r\n      break;\r\n    case \"warning\":\r\n      styleClassName = \"text-orange-500 bg-orange-100\";\r\n      break;\r\n    case \"danger\":\r\n      styleClassName = \"text-red-500 bg-red-100\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <LabelStatusStyles className={styleClassName}>{children}</LabelStatusStyles>\r\n  );\r\n};\r\nLabelStatus.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.oneOf([\"default\", \"success\", \"warning\", \"danger\"]).isRequired,\r\n};\r\nexport default LabelStatus;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nconst Toggle = (props) => {\r\n  const { on, onClick, ...rest } = props;\r\n\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={on}\r\n        onClick={onClick}\r\n        className=\"hidden-input\"\r\n        onChange={() => {}}\r\n      />\r\n      <div\r\n        className={`inline-block w-[70px] h-[42px] relative cursor-pointer rounded-full p-1 transition-all ${\r\n          on ? \"bg-green-500\" : \"bg-gray-300\"\r\n        }`}\r\n        {...rest}\r\n      >\r\n        <span\r\n          className={`transition-all w-[34px] h-[34px] bg-white rounded-full inline-block ${\r\n            on ? \"translate-x-[28px]\" : \"\"\r\n          }`}\r\n        ></span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nToggle.propTypes = {\r\n  on: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Toggle;","import { deleteObject, getDownloadURL, getStorage, ref, uploadBytesResumable } from \"firebase/storage\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function useFirebaseImage(setValue, getValues ,imageName = null, cb = null){\r\n    const [progress, setProgress] = useState(0);\r\n    const [image, setImage] = useState(\"\");\r\n    if(!setValue || !getValues) return;\r\n\r\n    const handleSelectImage = (e) =>{\r\n        const file = e.target.files[0];\r\n        console.log(file)\r\n        if(!file) return;\r\n        setValue('image_name', file.name);\r\n        handleUploadImage(file);\r\n      }\r\n    \r\n      const handleUploadImage = (file) => {\r\n        const storage = getStorage();\r\n        const storageRef = ref(storage, \"images/\" + file.name);\r\n        const uploadTask = uploadBytesResumable(storageRef, file);\r\n    \r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            const progressPercent =\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n              setProgress(progressPercent);\r\n            console.log(\"Upload is \" + progress + \"% done\");\r\n            switch (snapshot.state) {\r\n              case \"paused\":\r\n                console.log(\"Upload is paused\");\r\n                break;\r\n              case \"running\":\r\n                console.log(\"Upload is running\");\r\n                break;\r\n              default:\r\n                console.log(\"Nothing at all\");\r\n            }\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          () => {\r\n            // Upload completed successfully, now we can get the download URL\r\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n              console.log(\"File available at\", downloadURL);\r\n              setImage(downloadURL);\r\n            });\r\n          }\r\n        );\r\n      };\r\n    \r\n    \r\n      const handleDeleteImage = () => {\r\n        const storage = getStorage();\r\n        const imageRef = ref(storage, \"images/\" + (imageName || getValues(\"image_name\")));\r\n        deleteObject(imageRef)\r\n          .then(() => {\r\n            console.log(\"Remove image successfully\");\r\n            setImage(\"\");\r\n            setProgress(0);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"handleDeleteImage ~ error\", error);\r\n            console.log(\"Can not delete image\");\r\n          });\r\n      };\r\n\r\n      const handleResetUpload = () =>{\r\n        setImage('');\r\n        setProgress(0);\r\n        cb && cb();\r\n      }\r\n    return {image,handleResetUpload, setImage, progress,handleDeleteImage, handleSelectImage};\r\n}","import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\" ,children}) => {\r\n  return (\r\n    <div className=\"mb-10 flex items-start justify-between\">\r\n    <div>\r\n      <h1 className=\"dashboard-heading\">{title}</h1>\r\n      <p className=\"dashboard-short-desc\">{desc}</p>\r\n    </div>\r\n    {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;"],"names":["checked","children","control","name","rest","field","useController","defaultValue","type","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","DropdownContext","createContext","DropdownProvider","props","useState","show","setShow","values","toggle","Provider","value","useDropdown","context","useContext","Error","onClick","placeholder","onChange","Dropdown","Option","Search","Select","List","FieldStyles","styled","progress","image","handleDeleteImage","src","alt","Fragment","style","width","Math","ceil","InputStyles","hasIcon","theme","grayf1","black","id","LabelStyles","gray4b","htmlFor","LabelStatusStyles","styleClassName","on","useFirebaseImage","setValue","getValues","imageName","cb","setProgress","setImage","handleSelectImage","e","file","target","files","console","log","handleUploadImage","storage","getStorage","storageRef","ref","uploadTask","uploadBytesResumable","snapshot","progressPercent","bytesTransferred","totalBytes","state","error","getDownloadURL","then","downloadURL","imageRef","deleteObject","catch","handleResetUpload","title","desc"],"sourceRoot":""}