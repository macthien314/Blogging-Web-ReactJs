{"version":3,"file":"static/js/559.02202bbc.chunk.js","mappings":"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","sources":["components/checkbox/Radio.js","components/field/Field.js","components/field/FieldCheckboxes.js","components/input/Input.js","components/label/Label.js","components/label/LabelStatus.js","module/category/CategoryAddNew.js","module/dashboard/DashboardHeading.js"],"sourcesContent":["import React from \"react\";\r\nimport { useController } from \"react-hook-form\";\r\n\r\nconst Radio = ({ checked, children, control, name, ...rest }) => {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <label>\r\n      <input\r\n        checked={checked}\r\n        type=\"radio\"\r\n        className=\"hidden-input\"\r\n        {...field}\r\n        {...rest}\r\n      />\r\n      <div className=\"flex items-center gap-x-3 font-medium cursor-pointer\">\r\n        <div\r\n            className={`w-7 h-7 rounded-full border flex items-center justify-center p-1  ${\r\n            checked\r\n              ? \"bg-primary border-primary text-white\"\r\n              : \"border-gray-200 text-transparent\"\r\n          }`}\r\n          >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M5 13l4 4L19 7\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <span>{children}</span>\r\n      </div>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Radio;","import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst FieldStyles = styled.div`\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    row-gap: 10px;\r\n    margin-bottom: 25px;\r\n`\r\n\r\nconst Field = ({children}) =>{\r\n    return <FieldStyles>\r\n        {children}\r\n    </FieldStyles>\r\n}\r\n\r\nexport default Field; ","import React from \"react\";\r\n\r\nconst FieldCheckboxes = ({ children }) => {\r\n  return <div className=\"flex flex-wrap gap-5\">{children}</div>;\r\n};\r\n\r\nexport default FieldCheckboxes;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useController } from 'react-hook-form';\r\nimport PropTypes from 'prop-types'\r\n//Do có thêm icon nên dùng ,div thay vì .input\r\nconst InputStyles = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    input{\r\n        width:100%;\r\n        padding: ${(props) =>\r\n        props.hasIcon ? \"15px 60px 15px 25px\" : \"15px 25px\"};\r\n        background-color: transparent;\r\n        border: 1px solid ${(props) => props.theme.grayf1};\r\n        border-radius: 8px;\r\n        font-weight:500 ;\r\n        transition:all 0.2s linear ;\r\n        color: ${(props) => props.theme.black};\r\n        font-size: 14px;\r\n    }\r\n    input::-webkit-input-placeholder{\r\n        color:#84878b;\r\n\r\n    }\r\n    input::-moz-input-placeholder{\r\n        color:#84878b;\r\n    }\r\n    .input-icon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n/**\r\n *\r\n * @param {*} placeholder(optional) - Placeholder of input\r\n * @param {*} name(optional) - name of input\r\n * @param {*} control - control from react hook form\r\n * @returns Input\r\n */\r\n\r\nconst Input = ({\r\n    name = '',\r\n    type = 'text',\r\n    children,\r\n    control,\r\n    ...props\r\n}) => {\r\n\r\n    const { field } = useController({\r\n        control,\r\n        name,\r\n        defaultValue: '',\r\n    });\r\n\r\n    return (\r\n        //Nếu có\r\n        <InputStyles hasIcon={children ? true : false}>\r\n            <input id={name} type={type} {...field} {...props} />\r\n            {children ? <div className='input-icon'>{children}</div> : null}\r\n        </InputStyles>\r\n    );\r\n\r\n};\r\n\r\nInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n    children: PropTypes.any,\r\n    control: PropTypes.any.isRequired,\r\n}\r\n\r\nexport default Input;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LabelStyles = styled.label`\r\n  color: ${(props) => props.theme.gray4b};\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n`;\r\n//children nội dung, props những sự kiện onClick,..\r\nconst Label = ({ htmlFor = \"\", children, ...props }) => {\r\n  return (\r\n    <LabelStyles htmlFor={htmlFor} {...props}>\r\n      {children}\r\n    </LabelStyles>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LabelStatusStyles = styled.span`\r\n  display: inline-block;\r\n  padding: 10px 15px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n/**\r\n *\r\n * @param type - \"default\" \"success\" \"warning\" \"danger\"\r\n * @returns\r\n */\r\nconst LabelStatus = ({ children, type = \"default\" }) => {\r\n  let styleClassName = \"text-gray-500 bg-gray-100\";\r\n  switch (type) {\r\n    case \"success\":\r\n      styleClassName = \"text-green-500 bg-green-100\";\r\n      break;\r\n    case \"warning\":\r\n      styleClassName = \"text-orange-500 bg-orange-100\";\r\n      break;\r\n    case \"danger\":\r\n      styleClassName = \"text-red-500 bg-red-100\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <LabelStatusStyles className={styleClassName}>{children}</LabelStatusStyles>\r\n  );\r\n};\r\nLabelStatus.propTypes = {\r\n  children: PropTypes.node,\r\n  type: PropTypes.oneOf([\"default\", \"success\", \"warning\", \"danger\"]).isRequired,\r\n};\r\nexport default LabelStatus;","import { Button } from \"../../components/button\";\r\nimport { Radio } from \"../../components/checkbox\";\r\nimport { Field, FieldCheckboxes } from \"../../components/field\";\r\nimport { Input } from \"../../components/input\";\r\nimport { Label } from \"../../components/label\";\r\nimport DashboardHeading from \"../dashboard/DashboardHeading\";\r\nimport React from \"react\";\r\nimport slugify from 'slugify';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { categoryStatus } from \"../../utils/constants\";\r\n\r\nimport { db } from \"../../firebase-app/firebase-config\";\r\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nconst CategoryAddNew = () => {\r\n  const {\r\n    control,\r\n    setValue,\r\n    formState: { errors, isSubmitting, isValid },\r\n    handleSubmit,\r\n    watch,\r\n    reset\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues:{\r\n      name:'',\r\n      slug:'',\r\n      status: 1,\r\n      createdAt: new Date(),\r\n    }\r\n  });\r\n\r\n  const handleAddNewCategory = async (values) =>{\r\n    if(!isValid) return\r\n    const newValues = {...values};\r\n    newValues.slug = slugify(newValues.name || newValues.slug, {lower: true});\r\n    newValues.status = Number(newValues.status);\r\n    const colRef = collection(db, 'categories');\r\n\r\n    try {\r\n      await addDoc(colRef, {\r\n        ...newValues,\r\n        createdAt: serverTimestamp(),\r\n      });\r\n      toast.success('Create new category successfully')\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n    finally{\r\n      reset({\r\n        name:'',\r\n        slug:'',\r\n        status: 1,\r\n        createdAt: new Date(),\r\n      })\r\n    }\r\n\r\n\r\n   \r\n  }\r\n  const watchStatus = watch('status');\r\n\r\n  return (\r\n    <div>\r\n      <DashboardHeading \r\n        title=\"New category\"\r\n        desc=\"Add new category\"\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(handleAddNewCategory)}>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Name</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"name\"\r\n              placeholder=\"Enter your category name\"\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              name=\"slug\"\r\n              placeholder=\"Enter your slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <FieldCheckboxes >\r\n              <Radio name=\"status\" control={control} checked={Number(watchStatus) === categoryStatus.APPROVED} value={categoryStatus.APPROVED}>\r\n                Approved\r\n              </Radio>\r\n              <Radio name=\"status\" control={control} checked={Number(watchStatus) === categoryStatus.UNAPPROVED} value={categoryStatus.UNAPPROVED}>\r\n                Unapproved\r\n              </Radio>\r\n            </FieldCheckboxes>\r\n          </Field>\r\n        </div>\r\n        <Button kind=\"primary\" className=\"mx-auto w-[200px]\" type='submit' disabled={isSubmitting} isLoading={isSubmitting}>\r\n          Add new category\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryAddNew;","import React from \"react\";\r\n\r\nconst DashboardHeading = ({ title = \"\", desc = \"\" ,children}) => {\r\n  return (\r\n    <div className=\"mb-10 flex items-start justify-between\">\r\n    <div>\r\n      <h1 className=\"dashboard-heading\">{title}</h1>\r\n      <p className=\"dashboard-short-desc\">{desc}</p>\r\n    </div>\r\n    {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardHeading;"],"names":["checked","children","control","name","rest","field","useController","defaultValue","type","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","FieldStyles","styled","InputStyles","props","hasIcon","theme","grayf1","black","id","LabelStyles","gray4b","htmlFor","LabelStatusStyles","styleClassName","useForm","mode","defaultValues","slug","status","createdAt","Date","setValue","formState","isSubmitting","errors","isValid","handleSubmit","watch","reset","handleAddNewCategory","values","newValues","slugify","lower","Number","colRef","collection","db","addDoc","serverTimestamp","toast","message","watchStatus","title","desc","onSubmit","I","placeholder","required","categoryStatus","value","kind","disabled","isLoading"],"sourceRoot":""}